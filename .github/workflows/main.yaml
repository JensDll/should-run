name: Should run reuseable workflow

on:
  workflow_call:
    inputs:
      projects:
        description: The projects to match against
        type: string
        required: true
    outputs:
      result:
        description: JSON result - One boolean property for each input project
        value: ${{ jobs.main.outputs.result }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ toJSON(steps.changes.outputs) }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Fetch commits of pull request and determine changes
        id: changes
        # This script will fetch all commits of the current pull request.
        # It will then determine what projects have changed and
        # write the result to the GitHub action's output parameter.
        run: |
          shopt -s extglob

          declare -r projects=${${{ inputs.projects }}//+([ ,])/|}
          declare -r pattern=".*/($projects)/.*"

          IFS="|"
          for project in $projects
          do
            echo "::set-output name=$project::false"
          done
          unset IFS

          echo "Fetching commits of pull request ..."

          git fetch --depth=1 origin +refs/heads/"$GITHUB_BASE_REF":refs/remotes/origin/"$GITHUB_BASE_REF"
          git branch --track "$GITHUB_BASE_REF" origin/"$GITHUB_BASE_REF"

          while [[ -z "${merge_base:=$(git merge-base "$GITHUB_BASE_REF" HEAD)}" ]]
          do     
            git fetch --deepen=10 origin "$GITHUB_BASE_REF"
          done

          echo "Checking for changes ..."
          echo "The pattern is \"$pattern\""

          while read -r line
          do
            line="/$line"
            if [[ $line =~ $pattern ]]
            then
              echo "Match found in \"$line\" ... The match was \"${BASH_REMATCH[1]}\""
              echo "::set-output name=${BASH_REMATCH[1]}::true"
            fi
          done < <(git diff --name-only HEAD "$merge_base")
