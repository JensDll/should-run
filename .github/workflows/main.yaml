name: Should run reuseable workflow

on:
  workflow_call:
    inputs:
      projects:
        description: The projects to match against
        required: true
        type: string
      diff_filter:
        description: Filter to use on git diff
        required: false
        type: string
        default: ''
    outputs:
      result:
        description: JSON result. One boolean property for each input project
        value: ${{ jobs.main.outputs.result }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ toJSON(steps.changes.outputs) }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Initializing git repository
        run: |
          git init --initial-branch=main
          git remote add origin ${{ github.event.repository.html_url }}

      - name: Fetching base and head commit (push)
        if: github.event_name == 'push'
        env:
          PUSHED_COMMITS: ${{ toJSON(github.event.commits) }}
        run: |
          if [[ ${{ github.event.before }} == 0000000000000000000000000000000000000000 ]]
          then
            before=$(echo "$PUSHED_COMMITS" | jq .[0].id --raw-output)

            git fetch --no-tags --prune --no-recurse-submodules --depth=2 origin $before ${{ github.event.after }}

            echo "BASE=$(git rev-parse $before~1)" >> $GITHUB_ENV
          else
            git fetch --no-tags --prune --no-recurse-submodules --depth=1 origin ${{ github.event.before }} ${{ github.event.after }}

            echo "BASE=${{ github.event.before }}" >> $GITHUB_ENV
          fi

          echo "HEAD=${{ github.event.after }}" >> $GITHUB_ENV

      - name: Fetching base and head commit (pull_request)
        if: github.event_name == 'pull_request'
        run: |
          git fetch --no-tags --prune --no-recurse-submodules --depth=$((${{ github.event.pull_request.commits }} + 1)) origin ${{ github.event.pull_request.head.sha }}
          git fetch --no-tags --prune --no-recurse-submodules --depth=10 origin ${{ github.event.pull_request.base.sha }}
          git checkout --progress --force ${{ github.event.pull_request.head.sha }}

          while [[ -n $(git rev-list shallow ^${{ github.event.pull_request.base.sha }}) ]]
          do
            git fetch --no-tags --prune --no-recurse-submodules --deepen=10 origin ${{ github.event.pull_request.base.sha }}
          done

          base=$(git rev-list ${{ github.event.pull_request.head.sha }} ^${{ github.event.pull_request.base.sha }} | tail --lines 1 | xargs -I {} git rev-parse {}~1)

          echo "BASE=$base" >> $GITHUB_ENV
          echo "HEAD=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Determining changes
        id: changes
        run: |
          shopt -s extglob

          declare -r inputs="${{ inputs.projects }}"
          declare -r projects=${inputs//+([ ,])/|}
          declare -r pattern="^($projects)/.*"

          declare -r old_IFS=$IFS
          IFS="|"
          for project in $projects
          do
            echo "$project=false" >> $GITHUB_OUTPUT
          done
          IFS=$old_IFS

          echo "The pattern is: $pattern"

          while read -r line
          do
            echo "Git diff: $line"
            if [[ $line =~ $pattern ]]
            then
              echo "Match found! The match was: ${BASH_REMATCH[1]}"
              echo "${BASH_REMATCH[1]}=true" >> $GITHUB_OUTPUT
            fi
          done < <(git diff --name-only --diff-filter=${{ inputs.diff_filter }} ${{ env.BASE }} ${{ env.HEAD }})
